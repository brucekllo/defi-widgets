{"version":3,"file":"swap-token-list.esm.js","sources":["../src/index.ts"],"sourcesContent":["import axios from 'axios';\nimport _ from 'lodash';\nimport validator from 'validator';\n\ninterface ResultType {\n  success: boolean;\n  msg?: string;\n  data?: any;\n}\n\nexport class TokenList {\n  private TOKENS_ELEMENT = {\n    chainId: '',\n    address: '',\n    name: '',\n    symbol: '',\n    decimals: '',\n    logoURI: ''\n  };\n\n  private JSON_ELEMENT = {\n    'name': '',\n    'logoURI': '',\n    'timestamp': '',\n    'tokens': [],\n    'version': {\n      'major': '',\n      'minor': '',\n      'patch': ''\n    }\n  };\n\n  private errorMessage = (msg: string) => {\n    const error: ResultType = { success: false, msg };\n    return error;\n  };\n\n  private successData = (data?: any) => {\n    const result: ResultType = { success: true, data };\n    return result;\n  };\n\n  private getVersion = (v: { major?: 0 | undefined; minor?: 0 | undefined; patch?: 0 | undefined; }) => {\n    try {\n      const { major = 0, minor = 0, patch = 0 } = v;\n      return String(major) + '.' + String(minor) + '.' + String(patch);\n    } catch (err) {\n      console.log(err);\n      return '';\n    }\n  };\n\n  private checkVersionLater = (o: any, n: any) => {\n    try {\n      if (Number(n.major) > Number(o.major)) {\n        return true;\n      }\n      if (Number(n.minor) > Number(o.minor)) {\n        return true;\n      }\n      if (Number(n.patch) > Number(o.patch)) {\n        return true;\n      }\n      return false;\n    } catch (err) {\n      console.log(err);\n      return false;\n    }\n  };\n\n  private checkTokenChanged = (o: any, n: any, maxTokens = 100) => {\n    try {\n      const res = {\n        success: false,\n        addTokens: [],\n        delTokens: [],\n        updateTokens: []\n      };\n      const oVersion = o.version;\n      const nVersion = n.version;\n      const isVersionLater = this.checkVersionLater(oVersion, nVersion);\n      if (!isVersionLater) {\n        return res;\n      }\n      // If the number of tokens exceeds 100, no prompt will be given\n      if (n.tokens.length > maxTokens) {\n        return res;\n      }\n      const oTokens = o.tokens.slice() || [];\n      const delTokensInit = o.tokens.slice() || [];\n      const nTokens = n.tokens.slice() || [];\n      const addTokensInit = n.tokens.slice() || [];\n      _.pullAllWith(delTokensInit, nTokens, _.isEqual);\n      _.pullAllWith(addTokensInit, oTokens, _.isEqual);\n      const updateTokens = _.intersectionBy(addTokensInit, delTokensInit, 'address');\n      const addTokens = _.xorBy(addTokensInit, updateTokens, 'address');\n      const delTokens = _.xorBy(delTokensInit, updateTokens, 'address');\n      if (addTokens.length || delTokens.length || updateTokens.length) {\n        return {\n          success: true,\n          addTokens,\n          delTokens,\n          updateTokens\n        };\n      }\n      return res;\n    } catch (err) {\n      return {\n        success: false\n      };\n    }\n  };\n\n  private handleNotifiction = async (listsData: { byUrl: any; selectedListUrl: any; }, byUrlNew: { [x: string]: any; }) => {\n    try {\n      const updateStatus = Object.keys(byUrlNew).length > 0;\n      if (!updateStatus) {\n        return this.errorMessage(`error: No listings have updated content`);\n      }\n      const { byUrl, selectedListUrl } = listsData;\n      const o = byUrl[selectedListUrl];\n      const n = byUrlNew[selectedListUrl];\n      const oVersion = o.version;\n      const nVersion = n.version;\n      const { success = false, addTokens, delTokens, updateTokens } = this.checkTokenChanged(o, n);\n      let updateInfo = {};\n      if (success) {\n        updateInfo = {\n          addTokens,\n          delTokens,\n          updateTokens,\n          versionOld: this.getVersion(oVersion),\n          versionNew: this.getVersion(nVersion),\n          categoryName: o.name,\n        };\n      }\n      return this.successData(updateInfo);\n    } catch (err) {\n      console.log(err);\n      return this.errorMessage(`error: ${err}`);\n    }\n  };\n\n  private isValidURL = (url: string) => {\n    if (typeof url !== 'string') return false;\n    return validator.isURL(url.toString(), {\n      protocols: ['http', 'https'],\n      require_tld: true,\n      require_protocol: true\n    });\n  };\n\n  private isListsOver = (lists = {}, maxLists = 20) => {\n    return Object.keys(lists).length >= maxLists;\n  };\n\n  private isNotEmptyString = (str: string, tronweb = null) => {\n    const tronWeb = tronweb || (window as any).tronWeb;\n    return tronWeb.utils.isString(str) && str != '';\n  };\n\n  private isPositiveInteger = (num: number, allowZero = false, tronweb = null) => {\n    const tronWeb = tronweb || (window as any).tronWeb;\n    const numStatus = allowZero ? num >= 0 : num > 0;\n    return typeof num === 'number' && tronWeb.utils.isInteger(num) && numStatus;\n  };\n\n  private isTimestamp = (timestamp: number) => {\n    return this.isPositiveInteger(timestamp) && String(timestamp).length === 13;\n  };\n\n  private hasSpace = (str: string) => {\n    var reg = /(^\\s+)|(\\s+$)|\\s+/g;\n\n    return reg.test(str);\n  };\n\n  private tokensElementValidate: any = {\n    chainId: (chainId: number) => {\n      return this.isPositiveInteger(chainId) && chainId >= 1 && chainId <= 10; // Chainid ï¼šIt needs to be a number, between 1-10;\n    },\n    address: (address: any, tronweb = null) => {\n      const tronWeb = tronweb || (window as any).tronWeb;\n      return tronWeb.isAddress(address);\n    },\n    name: (name: string) => {\n      return this.isNotEmptyString(name);\n    },\n    symbol: (symbol: string) => {\n      return this.isNotEmptyString(symbol) && !this.hasSpace(symbol);\n    },\n    decimals: (decimals: number) => {\n      return this.isPositiveInteger(decimals) && decimals <= 256;\n    },\n    logoURI: (logoURI: string) => {\n      return this.isValidURL(logoURI);\n    }\n  };\n\n  private tokensValidate = (tokens: string | any[], tronweb = null) => {\n      const tronWeb = tronweb || (window as any).tronWeb;\n      if (!tronWeb.utils.isArray(tokens) || tokens.length === 0) {\n      return false;\n    }\n    let flag = true;\n    const len1 = tokens.length;\n    for (let j = 0; j < len1; j++) {\n      const t = tokens[j];\n      const element = Object.assign({ ...this.TOKENS_ELEMENT }, t);\n      const elementArr = Object.keys(element);\n      const length = elementArr.length;\n      for (let i = 0; i < length; i++) {\n        const key = elementArr[i];\n        const e = element[key];\n        if ((this.tokensElementValidate[key] && !this.tokensElementValidate[key](e)) || !this.tokensElementValidate[key]) {\n          flag = false;\n          break;\n        }\n      }\n      if (!flag) {\n        break;\n      }\n    }\n    return flag;\n  };\n\n  private jsonValidate: any = {\n    name: (name: any) => {\n      return this.isNotEmptyString(name);\n    },\n    logoURI: (logoURI: string) => {\n      return this.isValidURL(logoURI);\n    },\n    timestamp: (timestamp: any) => {\n      return this.isTimestamp(timestamp);\n    },\n    tokens: (tokens: any) => {\n      return this.tokensValidate(tokens);\n    },\n    version: (_version: { major: any; minor: any; patch: any; }, tronweb = null) => {\n      const tronWeb = tronweb || (window as any).tronWeb;\n      return (\n        tronWeb.utils.isObject(_version) &&\n        this.isPositiveInteger(_version.major, true) &&\n        this.isPositiveInteger(_version.minor, true) &&\n        this.isPositiveInteger(_version.patch, true)\n      );\n    }\n  };\n\n  private validateFunc = (target: any) => {\n    const json = Object.assign({ ...this.JSON_ELEMENT }, target);\n\n    const keysArr = Object.keys(json);\n    const length = keysArr.length;\n    const res = { key: '', valid: true };\n    for (let i = 0; i < length; i++) {\n      const key = keysArr[i];\n      if ((this.jsonValidate[key] && !this.jsonValidate[key](json[key])) || (!this.jsonValidate[key] && key !== 'uri')) {\n        // uri is added manually, without verification\n        res.key = key;\n        res.valid = false;\n        break;\n      }\n    }\n    return res;\n  };\n\n  private setTokensDataIntoLocal = (listsData: any) => {\n    try {\n      window.localStorage.setItem('simpleListsFromTron', JSON.stringify(listsData));\n      return window.localStorage.getItem('simpleListsFromTron');\n    } catch (err) {\n      return false;\n    }\n  };\n\n  private getDefaultListSet = async () => {\n    const res = await axios.get(`https://abc.ablesdxd.link/swap/v2/defaultListSet`);\n    if (res.data.code === 0) {\n      return res.data.data.filter((item: any) => item.type !== 'list');\n    } else {\n      return [];\n    }\n  }\n\n  // Get tokens data from backend\n  getTokenListFromUri = async (uri: string) => {\n    try {\n      const res = await axios.get(uri);\n      const obj = res && res.data ? res.data : null;\n      if (typeof obj !== 'object' || obj === null) {\n        return this.errorMessage(`error: No data`);\n      }\n      return this.successData({ ...res.data, uri });\n    } catch (err) {\n      console.log(err);\n      return this.errorMessage(`error: ${err}`);\n    }\n  };\n\n  // Add tokenlist\n  addTokenList = async (customTokenUri: string, maxLists = 20, maxTokens = 100) => {\n    try {\n      const simpleListsFromTronStr = window.localStorage.getItem('simpleListsFromTron') || '';\n      const simpleListsFromTron = simpleListsFromTronStr ? JSON.parse(simpleListsFromTronStr) : {};\n      const { byUrl = {} } = simpleListsFromTron;\n      // The address is invalid\n      if (!this.isValidURL(customTokenUri)) {\n        return this.errorMessage(`error: The list cannot be added`);\n      }\n\n      // exists in the list\n      if (byUrl[customTokenUri] && !byUrl[customTokenUri].rs) {\n        // not deleted\n        return this.errorMessage(`error: Already exists in the list`);\n      }\n\n      // Whether the number of lists exceeds 20\n      if (this.isListsOver(byUrl)) {\n        return this.errorMessage(`error: You have more than ${maxLists} lists.The list cannot be added`);\n      }\n      \n      return this.updateTokenList(customTokenUri, maxTokens);\n    } catch (err) {\n      // The request returns an error code\n      console.log(err);\n      return this.errorMessage(`error: Adding failed, please try again. ${err}`);\n    }\n  };\n\n  // Add default tokenlist\n  addDefaultTokenList = async () => {\n    return this.addTokenList(`https://list.justswap.link/justswap.json`);\n  };\n\n  // Get tokens data from local cache\n  getTokenListFromLocal = () => {\n    try {\n      if (!window.localStorage.getItem('simpleListsFromTron')) return { byUrl: {} };\n      const simpleListsFromTronStr = window.localStorage.getItem('simpleListsFromTron') || '';\n      if (!simpleListsFromTronStr) {\n        return this.errorMessage(`error: TokenList does not exist`);\n      }\n      const simpleListsFromTron = JSON.parse(simpleListsFromTronStr);\n      const { byUrl = {}, selectedListUrl = '' } = simpleListsFromTron;\n      const keyArr = Object.keys(byUrl);\n      let res: any = {};\n      keyArr.map((item: any) => {\n        if (byUrl[item].name !== 'JustSwap Default List') {\n          res[item] = byUrl[item];\n        }\n      });\n      let listsData: any = {};\n      listsData.byUrl = res;\n\n      if (!res[selectedListUrl]) {\n        listsData.selectedListUrl = keyArr[0];\n      } else {\n        listsData.selectedListUrl = selectedListUrl;\n      }\n      return this.successData(listsData);\n    } catch (err) {\n      console.log(err);\n      return this.errorMessage(`error: ${err}`);\n    }\n  };\n\n  // Get list data update information\n  getUpdateInfo = async ({ maxLists = 20 } = {}) => {\n    try {\n      const tokens = await this.getDefaultListSet();\n      // You need to get all the latest data, and compare it with the local cached version. If there is a version update, the information will be returned\n      let listsData: any = {};\n      let localRes: any = this.getTokenListFromLocal();\n      if (localRes?.success) listsData = localRes.data;\n      const jsonPromises: any[] = [];\n      tokens.map((item: any) => {\n        item.uri = item.uri.trim();\n        const res: any = this.getTokenListFromUri(item.uri);\n        if (res.success) jsonPromises.push(res.data);\n      });\n      let res = await Promise.all(jsonPromises);\n      const resObj: any = {};\n      res.map(r => {\n        resObj[r.uri] = { ...r };\n      });\n      const byUrlNew = resObj;\n      tokens.map((item: any, i: number) => {\n        const uri = item.uri;\n        if (resObj[uri] && !listsData.byUrl[uri]) {\n          // If there is no local cache, it is directly added, that is, the newly added list has no update prompt.\n          if (Object.keys(listsData.byUrl).length < maxLists) {\n            listsData.byUrl[uri] = { ...item, ...resObj[uri] };\n            if (!listsData.selectedListUrl && Number(item.defaultList) === 1) {\n              listsData.selectedListUrl = uri;\n            }\n          }\n        }\n        if (i === tokens.length - 1) {\n          this.setTokensDataIntoLocal(listsData);\n        }\n      });\n      return this.handleNotifiction(listsData, byUrlNew);\n    } catch (err) {\n      console.log(err);\n      return this.errorMessage(`error: ${err}`);\n    }\n  };\n\n  // Update list data\n  updateTokenList = async (selectedListUrl: string, maxTokens = 100) => {\n    try { \n      const res: any = await this.getTokenListFromUri(selectedListUrl);\n      let jsonData: any = {};\n      if (res.success) jsonData = res.data;\n      const { tokens = [] } = jsonData;\n\n      // Whether the number of tokens in the list exceeds 100\n      if (tokens.length > maxTokens) {\n        return this.errorMessage(`error: The number of tokens in the list exceeds ${maxTokens}.The list cannot be added`);\n      }\n  \n      const { key = '', valid = false } = this.validateFunc(jsonData);\n\n      // JSON data field validation\n      if (!valid) {\n        return this.errorMessage(`error: Invalid ${key}. The list cannot be added`);\n      }\n\n      jsonData = { ...jsonData, uri: selectedListUrl, rs: 0 };\n\n      let listsData: any = { selectedListUrl: '', byUrl: {} };\n      let localRes: any = this.getTokenListFromLocal();\n      if (localRes?.success) listsData = localRes.data;\n      listsData.selectedListUrl = selectedListUrl;\n      jsonData.tm = Date.now();\n      listsData.byUrl[selectedListUrl] = jsonData;\n\n      this.setTokensDataIntoLocal(listsData);\n      return this.successData(listsData);\n    } catch (err) {\n      console.log(err);\n      return this.errorMessage(`error: ${err}`);\n    }\n  };\n\n  // Delete custom list\n  deleteTokenList = (uri: string | number) => {\n    let listsData: any = {};\n    let localRes: any = this.getTokenListFromLocal();\n    if (localRes?.success) listsData = localRes.data;\n    if (listsData?.byUrl[uri]) {\n      delete listsData.byUrl[uri];\n    } else {\n      return this.errorMessage(`error: The specified tokenlist does not exist or has been deleted`);\n    }\n    const res: any = this.setTokensDataIntoLocal(listsData);\n    if (res?.byUrl?.uri) {\n      return this.errorMessage(`error: Delete specified tokenlist error`);\n    } else {\n      return this.successData();\n    }\n  };\n}\n\nexport const TokenListProvider = new TokenList();\n"],"names":["TokenList","chainId","address","name","symbol","decimals","logoURI","msg","error","success","data","result","v","major","minor","patch","String","err","console","log","o","n","Number","maxTokens","res","addTokens","delTokens","updateTokens","oVersion","version","nVersion","isVersionLater","checkVersionLater","tokens","length","oTokens","slice","delTokensInit","nTokens","addTokensInit","_","pullAllWith","isEqual","intersectionBy","xorBy","listsData","byUrlNew","updateStatus","Object","keys","errorMessage","byUrl","selectedListUrl","checkTokenChanged","updateInfo","versionOld","getVersion","versionNew","categoryName","successData","url","validator","isURL","toString","protocols","require_tld","require_protocol","lists","maxLists","str","tronweb","tronWeb","window","utils","isString","num","allowZero","numStatus","isInteger","timestamp","isPositiveInteger","reg","test","isAddress","isNotEmptyString","hasSpace","isValidURL","isArray","flag","len1","j","t","element","assign","TOKENS_ELEMENT","elementArr","i","key","e","tokensElementValidate","isTimestamp","tokensValidate","_version","isObject","target","json","JSON_ELEMENT","keysArr","valid","jsonValidate","localStorage","setItem","JSON","stringify","getItem","axios","get","code","filter","item","type","uri","obj","customTokenUri","simpleListsFromTronStr","simpleListsFromTron","parse","rs","isListsOver","updateTokenList","addTokenList","keyArr","map","getDefaultListSet","localRes","getTokenListFromLocal","jsonPromises","trim","getTokenListFromUri","push","Promise","all","resObj","r","defaultList","setTokensDataIntoLocal","handleNotifiction","jsonData","validateFunc","tm","Date","now","TokenListProvider"],"mappings":"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"}